local JSon = {}
function JSon:Encode(Table)
	return game:GetService("HttpService"):JSONEncode(Table)
end

function JSon:Decode(Table)
	return game:GetService("HttpService"):JSONDecode(Table)
end

_G.Table = {
	GUIStatus = {
		Logo = 0,
		ActiveTab = "Home",
		Version = "7.150",
		IsClosed = false,
	},

	GUISettings = {
		Wallpaper = "11926598891",
		UIScale = 1,
		UIShadow = "25, 26, 31",
	},

	Favorites = {},

	Plugins = {},

	Scripts = {
		["Scripts"] = {
			["Info"] = {
				Icon = "rbxassetid://11592851654",
				Order = 1,
			},

			["Copy Chat Messages"] = {
				Creator = "V31nc",
				Description = "Copies chat messages. You can't stop it.",
				GameId = 0,
				RigType = "Any", -- R6, R15, Any
				IsOP = false,
				IsNew = false,
				ScriptId = 1001,
				Script = 'https://pastebin.com/raw/no'
			},

			["Anti Kick"] = {
				Creator = "Unknown",
				Description = "This script only works on some games.",
				GameId = 0,
				RigType = "Any", -- R6, R15, Any
				IsOP = true,
				IsNew = false,
				ScriptId = 1002,
				Script = 'https://pastebin.com/raw/ye'
			},

			["Kill Farm"] = {
				Creator = "Zaptosis (Unverified Creator)",
				Description = "Freeze players to kill them. Only works on some games.",
				GameId = 0,
				RigType = "Any", -- R6, R15, Any
				IsOP = true,
				IsNew = false,
				ScriptId = 1003,
				Script = 'https://pastebin.com/raw/my'
			},
		},

		["Required Accessories"] = {
			["Info"] = {
				Icon = "rbxassetid://11592824883",
				Order = 2,
			},
		},

		["GUIS"] = {
			["Info"] = {
				Icon = "rbxassetid://11592848654",
				Order = 3,
			},
		},

		["Animations"] = {
			["Info"] = {
				Icon = "rbxassetid://11592835705",
				Order = 4,
			},
		},

		["Commands"] = {
			["Info"] = {
				Icon = "rbxassetid://11592837927",
				Order = 5,
			},
		},

		["Other Hubs"] = {
			["Info"] = {
				Icon = "rbxassetid://11592850267",
				Order = 6,
			},
		},
	}
}

if (writefile) then
	if isfolder("VexHub7") then
		local success, result = pcall(function()
			_G.Table.GUISettings = JSon:Decode(readfile("VexHub7/Settings.vex"))
			_G.Table.Favorites = JSon:Decode(readfile("VexHub7/Favorites.vex"))
			
			for _, PluginName in listfiles("VexHub/Plugins") do
				if string.find(string.lower(tostring(PluginName)), ".vexp") then
					local PluginContents = loadstring(readfile(PluginName))()
					table.insert(_G.Table.Plugins, PluginContents)
				end
			end
		end)
		
		if success then
			print("Read files successfully")
		else
			delfolder("VexHub7")
			wait()
			makefolder("VexHub7")
			makefolder("VexHub7/Plugins")
			writefile("VexHub7/Settings.vex", JSon:Encode(_G.Table.GUISettings))
			writefile("VexHub7/Favorites.vex", JSon:Encode({}))
		end
	else
		makefolder("VexHub7")
		makefolder("VexHub7/Plugins")
		writefile("VexHub7/Settings.vex", JSon:Encode(_G.Table.GUISettings))
		writefile("VexHub7/Favorites.vex", JSon:Encode({}))
	end
end

for _, Scripts in _G.Table.Scripts do
	for ScriptName, ScriptInfo in Scripts do
		if ScriptName ~= "Info" then
			local Secret = "1Aq8ET3WbsdhKUSRvrKzHRhVdgUMQq4GYSuVlEX8"
			local URL = "https://vexhub-general-server-default-rtdb.firebaseio.com/"
			local data = nil
			
			local Success, Error = pcall(function()
				local database = URL..".json?auth="..Secret
				data = game.HttpService:JSONDecode(game:HttpGetAsync(database))
			end)
			
			if Success then
				if not data.ScriptsInfo[ScriptInfo.ScriptId] then
					local Success, Error = pcall(function()
						local Folder = "ScriptsInfo" --You can change the parent or the location of the data

						local database = URL..Folder..".json?auth="..Secret
						local request = request or syn.request
						local Table = {}

						if game.HttpService:JSONDecode(game:HttpGetAsync(database)) ~= nil then
							for key, value in pairs(game.HttpService:JSONDecode(game:HttpGetAsync(database))) do
								if key then
									Table[key] = value
								end
							end
						end

						Table[ScriptInfo.ScriptId] = {
							NumberOfExecutions = 0,
							LikedBy = {
							},
							DislikedBy = {
							},
						}

						local send = request({
							Url = database,
							Method = "PUT",
							Headers = {["Content-Type"] = "application/json"},
							Body = game.HttpService:JSONEncode(Table)
						})
					end)

					if not Success then
						print("Cannot create a info for "..ScriptName.." ("..ScriptInfo.ScriptId..") : "..Error)
					end
				end
			else
				print("Something went wrong while trying to read server database: "..Error)
			end
		end
	end
end
